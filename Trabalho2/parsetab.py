
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULDIVnonassocUMINUSAND BIG BIGEQ DIV DO ELSE EQ FOR ID IF IGUAL INT LISTA MINUS MUL NEWLINE NINT OR PLUS SMALL SMALLEQ THEN VIRG WHILEstart : expr\n                | exprl\n                | if_then\n                | if_ifnot\n                | while\n                | for\n                | decl\n                decl : ID IGUAL INT NINT decl : ID IGUAL LISTA list_nintexpr :  expr PLUS expr\n                  | expr MINUS expr\n                  | expr MUL expr\n                  | expr DIV exprexpr : MINUS expr %prec UMINUSexpr : NINTexprl : expr BIG expr\n                  | expr SMALL expr\n                  | expr BIGEQ expr\n                  | expr SMALLEQ expr\n                  | expr EQ expr\n                  | exprl AND exprl\n                  | exprl OR exprl\n                  operation : exprl\n                    | expr\n                    | NINT\n                    operations : operation NEWLINE operations\n                    operations : operationif_ifnot : IF exprl THEN operations ELSE operationsif_then : IF exprl THEN operationswhile : WHILE exprl DO operationsfor : FOR exprl DO operationslist_nint : NINT\n                    | NINT VIRG list_nint\n                    '
    
_lr_action_items = {'MINUS':([0,2,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,28,32,33,34,35,36,37,38,39,40,43,44,45,51,52,58,59,],[9,16,9,-15,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-14,16,-10,-11,-12,-13,16,16,16,16,16,9,9,9,16,-15,9,9,]),'NINT':([0,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,43,44,45,46,47,58,59,60,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,52,52,52,55,57,52,52,57,]),'IF':([0,],[11,]),'WHILE':([0,],[12,]),'FOR':([0,],[13,]),'ID':([0,],[14,]),'$end':([1,2,3,4,5,6,7,8,10,26,32,33,34,35,36,37,38,39,40,41,42,48,49,50,51,52,53,54,55,56,57,61,62,63,],[0,-1,-2,-3,-4,-5,-6,-7,-15,-14,-10,-11,-12,-13,-16,-17,-18,-19,-20,-21,-22,-23,-29,-27,-24,-15,-30,-31,-8,-9,-32,-28,-26,-33,]),'PLUS':([2,10,26,28,32,33,34,35,36,37,38,39,40,51,52,],[15,-15,-14,15,-10,-11,-12,-13,15,15,15,15,15,15,-15,]),'MUL':([2,10,26,28,32,33,34,35,36,37,38,39,40,51,52,],[17,-15,-14,17,17,17,-12,-13,17,17,17,17,17,17,-15,]),'DIV':([2,10,26,28,32,33,34,35,36,37,38,39,40,51,52,],[18,-15,-14,18,18,18,-12,-13,18,18,18,18,18,18,-15,]),'BIG':([2,10,26,28,32,33,34,35,51,52,],[19,-15,-14,19,-10,-11,-12,-13,19,-15,]),'SMALL':([2,10,26,28,32,33,34,35,51,52,],[20,-15,-14,20,-10,-11,-12,-13,20,-15,]),'BIGEQ':([2,10,26,28,32,33,34,35,51,52,],[21,-15,-14,21,-10,-11,-12,-13,21,-15,]),'SMALLEQ':([2,10,26,28,32,33,34,35,51,52,],[22,-15,-14,22,-10,-11,-12,-13,22,-15,]),'EQ':([2,10,26,28,32,33,34,35,51,52,],[23,-15,-14,23,-10,-11,-12,-13,23,-15,]),'AND':([3,10,26,27,29,30,32,33,34,35,36,37,38,39,40,41,42,48,],[24,-15,-14,24,24,24,-10,-11,-12,-13,-16,-17,-18,-19,-20,24,24,24,]),'OR':([3,10,26,27,29,30,32,33,34,35,36,37,38,39,40,41,42,48,],[25,-15,-14,25,25,25,-10,-11,-12,-13,-16,-17,-18,-19,-20,25,25,25,]),'THEN':([10,26,27,32,33,34,35,36,37,38,39,40,41,42,],[-15,-14,43,-10,-11,-12,-13,-16,-17,-18,-19,-20,-21,-22,]),'DO':([10,26,29,30,32,33,34,35,36,37,38,39,40,41,42,],[-15,-14,44,45,-10,-11,-12,-13,-16,-17,-18,-19,-20,-21,-22,]),'NEWLINE':([10,26,32,33,34,35,36,37,38,39,40,41,42,48,50,51,52,],[-15,-14,-10,-11,-12,-13,-16,-17,-18,-19,-20,-21,-22,-23,59,-24,-15,]),'ELSE':([10,26,32,33,34,35,36,37,38,39,40,41,42,48,49,50,51,52,62,],[-15,-14,-10,-11,-12,-13,-16,-17,-18,-19,-20,-21,-22,-23,58,-27,-24,-15,-26,]),'IGUAL':([14,],[31,]),'INT':([31,],[46,]),'LISTA':([31,],[47,]),'VIRG':([57,],[60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'expr':([0,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,43,44,45,58,59,],[2,26,28,28,28,32,33,34,35,36,37,38,39,40,28,28,51,51,51,51,51,]),'exprl':([0,11,12,13,24,25,43,44,45,58,59,],[3,27,29,30,41,42,48,48,48,48,48,]),'if_then':([0,],[4,]),'if_ifnot':([0,],[5,]),'while':([0,],[6,]),'for':([0,],[7,]),'decl':([0,],[8,]),'operations':([43,44,45,58,59,],[49,53,54,61,62,]),'operation':([43,44,45,58,59,],[50,50,50,50,50,]),'list_nint':([47,60,],[56,63,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> expr','start',1,'p_start','yacc_teste.py',15),
  ('start -> exprl','start',1,'p_start','yacc_teste.py',16),
  ('start -> if_then','start',1,'p_start','yacc_teste.py',17),
  ('start -> if_ifnot','start',1,'p_start','yacc_teste.py',18),
  ('start -> while','start',1,'p_start','yacc_teste.py',19),
  ('start -> for','start',1,'p_start','yacc_teste.py',20),
  ('start -> decl','start',1,'p_start','yacc_teste.py',21),
  ('decl -> ID IGUAL INT NINT','decl',4,'p_decl','yacc_teste.py',29),
  ('decl -> ID IGUAL LISTA list_nint','decl',4,'p_decl_list','yacc_teste.py',37),
  ('expr -> expr PLUS expr','expr',3,'p_expression_ariop','yacc_teste.py',73),
  ('expr -> expr MINUS expr','expr',3,'p_expression_ariop','yacc_teste.py',74),
  ('expr -> expr MUL expr','expr',3,'p_expression_ariop','yacc_teste.py',75),
  ('expr -> expr DIV expr','expr',3,'p_expression_ariop','yacc_teste.py',76),
  ('expr -> MINUS expr','expr',2,'p_expr2uminus','yacc_teste.py',85),
  ('expr -> NINT','expr',1,'p_expr2NUM','yacc_teste.py',89),
  ('exprl -> expr BIG expr','exprl',3,'p_expression_logop','yacc_teste.py',94),
  ('exprl -> expr SMALL expr','exprl',3,'p_expression_logop','yacc_teste.py',95),
  ('exprl -> expr BIGEQ expr','exprl',3,'p_expression_logop','yacc_teste.py',96),
  ('exprl -> expr SMALLEQ expr','exprl',3,'p_expression_logop','yacc_teste.py',97),
  ('exprl -> expr EQ expr','exprl',3,'p_expression_logop','yacc_teste.py',98),
  ('exprl -> exprl AND exprl','exprl',3,'p_expression_logop','yacc_teste.py',99),
  ('exprl -> exprl OR exprl','exprl',3,'p_expression_logop','yacc_teste.py',100),
  ('operation -> exprl','operation',1,'p_operation','yacc_teste.py',119),
  ('operation -> expr','operation',1,'p_operation','yacc_teste.py',120),
  ('operation -> NINT','operation',1,'p_operation','yacc_teste.py',121),
  ('operations -> operation NEWLINE operations','operations',3,'p_operation_def','yacc_teste.py',126),
  ('operations -> operation','operations',1,'p_operations_newline','yacc_teste.py',132),
  ('if_ifnot -> IF exprl THEN operations ELSE operations','if_ifnot',6,'p_IF_IFNOT','yacc_teste.py',139),
  ('if_then -> IF exprl THEN operations','if_then',4,'p_IF','yacc_teste.py',144),
  ('while -> WHILE exprl DO operations','while',4,'p_while','yacc_teste.py',148),
  ('for -> FOR exprl DO operations','for',4,'p_for','yacc_teste.py',152),
  ('list_nint -> NINT','list_nint',1,'p_list_nint','yacc_teste.py',157),
  ('list_nint -> NINT VIRG list_nint','list_nint',3,'p_list_nint','yacc_teste.py',158),
]
