
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULDIVnonassocUMINUSAND BIG BIGEQ DIV DO ELSE EQ FOR ID IF IGUAL INT LISTA MINUS MUL NEWLINE NINT OR PLUS SMALL SMALLEQ THEN VIRG WHILEstart : expr\n                | exprl\n                | operation\n                | if_then\n                | if_ifnot\n                | while\n                | for\n                | list\n                | decl\n                decl : ID IGUAL decl_type decl_type : LISTA\n                    | NINT\n                    expr :  expr PLUS expr\n                  | expr MINUS expr\n                  | expr MUL expr\n                  | expr DIV exprexpr : MINUS expr %prec UMINUSexpr : INTexprl : expr BIG expr\n                  | expr SMALL expr\n                  | expr BIGEQ expr\n                  | expr SMALLEQ expr\n                  | expr EQ expr\n                  | expr AND expr\n                  | expr OR expr\n                  operation : exprl\n                    | expr\n                    | INT\n                    operations : operation NEWLINE operations\n                    | operation\n                    if_ifnot : IF exprl THEN operations ELSE operationsif_then : IF exprl THEN operationswhile : WHILE exprl DO operationsfor : FOR exprl DO operationslist : ID IGUAL LISTA list_nint list_nint : INT\n                    | INT VIRG list_nint\n                    '
    
_lr_action_items = {'MINUS':([0,2,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,55,56,61,62,],[11,18,11,-18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-17,-18,18,-13,-14,-15,-16,18,18,18,18,18,18,18,11,11,11,18,-18,11,11,]),'INT':([0,11,13,14,15,17,18,19,20,21,22,23,24,25,26,27,46,47,48,49,61,62,63,],[12,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,56,56,56,60,56,56,60,]),'IF':([0,],[13,]),'WHILE':([0,],[14,]),'FOR':([0,],[15,]),'ID':([0,],[16,]),'$end':([1,2,3,4,5,6,7,8,9,10,12,28,29,35,36,37,38,39,40,41,42,43,44,45,49,50,51,52,53,54,55,56,57,58,59,60,64,65,66,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-18,-17,-18,-13,-14,-15,-16,-19,-20,-21,-22,-23,-24,-25,-11,-10,-12,-26,-32,-30,-27,-18,-33,-34,-35,-36,-31,-29,-37,]),'PLUS':([2,12,28,29,31,35,36,37,38,39,40,41,42,43,44,45,55,56,],[17,-18,-17,-18,17,-13,-14,-15,-16,17,17,17,17,17,17,17,17,-18,]),'MUL':([2,12,28,29,31,35,36,37,38,39,40,41,42,43,44,45,55,56,],[19,-18,-17,-18,19,19,19,-15,-16,19,19,19,19,19,19,19,19,-18,]),'DIV':([2,12,28,29,31,35,36,37,38,39,40,41,42,43,44,45,55,56,],[20,-18,-17,-18,20,20,20,-15,-16,20,20,20,20,20,20,20,20,-18,]),'BIG':([2,12,28,29,31,35,36,37,38,55,56,],[21,-18,-17,-18,21,-13,-14,-15,-16,21,-18,]),'SMALL':([2,12,28,29,31,35,36,37,38,55,56,],[22,-18,-17,-18,22,-13,-14,-15,-16,22,-18,]),'BIGEQ':([2,12,28,29,31,35,36,37,38,55,56,],[23,-18,-17,-18,23,-13,-14,-15,-16,23,-18,]),'SMALLEQ':([2,12,28,29,31,35,36,37,38,55,56,],[24,-18,-17,-18,24,-13,-14,-15,-16,24,-18,]),'EQ':([2,12,28,29,31,35,36,37,38,55,56,],[25,-18,-17,-18,25,-13,-14,-15,-16,25,-18,]),'AND':([2,12,28,29,31,35,36,37,38,55,56,],[26,-18,-17,-18,26,-13,-14,-15,-16,26,-18,]),'OR':([2,12,28,29,31,35,36,37,38,55,56,],[27,-18,-17,-18,27,-13,-14,-15,-16,27,-18,]),'IGUAL':([16,],[34,]),'THEN':([28,29,30,35,36,37,38,39,40,41,42,43,44,45,],[-17,-18,46,-13,-14,-15,-16,-19,-20,-21,-22,-23,-24,-25,]),'DO':([28,29,32,33,35,36,37,38,39,40,41,42,43,44,45,],[-17,-18,47,48,-13,-14,-15,-16,-19,-20,-21,-22,-23,-24,-25,]),'NEWLINE':([28,29,35,36,37,38,39,40,41,42,43,44,45,52,54,55,56,],[-17,-18,-13,-14,-15,-16,-19,-20,-21,-22,-23,-24,-25,-26,62,-27,-18,]),'ELSE':([28,29,35,36,37,38,39,40,41,42,43,44,45,52,53,54,55,56,65,],[-17,-18,-13,-14,-15,-16,-19,-20,-21,-22,-23,-24,-25,-26,61,-30,-27,-18,-29,]),'LISTA':([34,],[49,]),'NINT':([34,],[51,]),'VIRG':([60,],[63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'expr':([0,11,13,14,15,17,18,19,20,21,22,23,24,25,26,27,46,47,48,61,62,],[2,28,31,31,31,35,36,37,38,39,40,41,42,43,44,45,55,55,55,55,55,]),'exprl':([0,13,14,15,46,47,48,61,62,],[3,30,32,33,52,52,52,52,52,]),'operation':([0,46,47,48,61,62,],[4,54,54,54,54,54,]),'if_then':([0,],[5,]),'if_ifnot':([0,],[6,]),'while':([0,],[7,]),'for':([0,],[8,]),'list':([0,],[9,]),'decl':([0,],[10,]),'decl_type':([34,],[50,]),'operations':([46,47,48,61,62,],[53,57,58,64,65,]),'list_nint':([49,63,],[59,66,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> expr','start',1,'p_start','teste com if e loop.py',80),
  ('start -> exprl','start',1,'p_start','teste com if e loop.py',81),
  ('start -> operation','start',1,'p_start','teste com if e loop.py',82),
  ('start -> if_then','start',1,'p_start','teste com if e loop.py',83),
  ('start -> if_ifnot','start',1,'p_start','teste com if e loop.py',84),
  ('start -> while','start',1,'p_start','teste com if e loop.py',85),
  ('start -> for','start',1,'p_start','teste com if e loop.py',86),
  ('start -> list','start',1,'p_start','teste com if e loop.py',87),
  ('start -> decl','start',1,'p_start','teste com if e loop.py',88),
  ('decl -> ID IGUAL decl_type','decl',3,'p_decl','teste com if e loop.py',93),
  ('decl_type -> LISTA','decl_type',1,'p_decl_type','teste com if e loop.py',97),
  ('decl_type -> NINT','decl_type',1,'p_decl_type','teste com if e loop.py',98),
  ('expr -> expr PLUS expr','expr',3,'p_expression_ariop','teste com if e loop.py',103),
  ('expr -> expr MINUS expr','expr',3,'p_expression_ariop','teste com if e loop.py',104),
  ('expr -> expr MUL expr','expr',3,'p_expression_ariop','teste com if e loop.py',105),
  ('expr -> expr DIV expr','expr',3,'p_expression_ariop','teste com if e loop.py',106),
  ('expr -> MINUS expr','expr',2,'p_expr2uminus','teste com if e loop.py',113),
  ('expr -> INT','expr',1,'p_expr2NUM','teste com if e loop.py',117),
  ('exprl -> expr BIG expr','exprl',3,'p_expression_logop','teste com if e loop.py',122),
  ('exprl -> expr SMALL expr','exprl',3,'p_expression_logop','teste com if e loop.py',123),
  ('exprl -> expr BIGEQ expr','exprl',3,'p_expression_logop','teste com if e loop.py',124),
  ('exprl -> expr SMALLEQ expr','exprl',3,'p_expression_logop','teste com if e loop.py',125),
  ('exprl -> expr EQ expr','exprl',3,'p_expression_logop','teste com if e loop.py',126),
  ('exprl -> expr AND expr','exprl',3,'p_expression_logop','teste com if e loop.py',127),
  ('exprl -> expr OR expr','exprl',3,'p_expression_logop','teste com if e loop.py',128),
  ('operation -> exprl','operation',1,'p_operation','teste com if e loop.py',142),
  ('operation -> expr','operation',1,'p_operation','teste com if e loop.py',143),
  ('operation -> INT','operation',1,'p_operation','teste com if e loop.py',144),
  ('operations -> operation NEWLINE operations','operations',3,'p_operation_def','teste com if e loop.py',149),
  ('operations -> operation','operations',1,'p_operation_def','teste com if e loop.py',150),
  ('if_ifnot -> IF exprl THEN operations ELSE operations','if_ifnot',6,'p_IF_IFNOT','teste com if e loop.py',164),
  ('if_then -> IF exprl THEN operations','if_then',4,'p_IF','teste com if e loop.py',169),
  ('while -> WHILE exprl DO operations','while',4,'p_while','teste com if e loop.py',173),
  ('for -> FOR exprl DO operations','for',4,'p_for','teste com if e loop.py',177),
  ('list -> ID IGUAL LISTA list_nint','list',4,'p_list','teste com if e loop.py',182),
  ('list_nint -> INT','list_nint',1,'p_list_nint','teste com if e loop.py',186),
  ('list_nint -> INT VIRG list_nint','list_nint',3,'p_list_nint','teste com if e loop.py',187),
]
